{
  "api/Tetris.Blocks.html": {
    "href": "api/Tetris.Blocks.html",
    "title": "Class Blocks | Cooperative Tetris",
    "keywords": "Class Blocks Manages all block and their movement Inheritance System.Object Blocks Namespace : Tetris Assembly : cs.temp.dll.dll Syntax public class Blocks : MonoBehaviour Fields ActiveSpawn List for ActiveSpawn bool, a request for SpawnMino(Int32, String) Declaration public static readonly List<bool> ActiveSpawn Field Value Type Description System.Collections.Generic.List < System.Boolean > blockPrefab Gets a Unity prefab for a cube with pre-applied material etc. Declaration public GameObject blockPrefab Field Value Type Description GameObject HoldArea Coordinates for area where each player have it's held block, if such a block exists Declaration public static List<Vector3> HoldArea Field Value Type Description System.Collections.Generic.List < Vector3 > HoldBlock List for HoldBlock GameObjects Declaration public static readonly List<GameObject> HoldBlock Field Value Type Description System.Collections.Generic.List < GameObject > holdSpawn List for holdSpawn bool Declaration public List<bool> holdSpawn Field Value Type Description System.Collections.Generic.List < System.Boolean > HoldType Array for HoldType strings Declaration public static readonly string[] HoldType Field Value Type Description System.String [] holdUsed List for holdUsed bool Declaration public List<bool> holdUsed Field Value Type Description System.Collections.Generic.List < System.Boolean > IsFalling List for IsFalling bool, false when soft dropping Declaration public static readonly List<bool> IsFalling Field Value Type Description System.Collections.Generic.List < System.Boolean > KeybindHardDrop Declaration public static string[] KeybindHardDrop Field Value Type Description System.String [] KeybindHold Declaration public static string[] KeybindHold Field Value Type Description System.String [] KeybindLeft Declaration public static string[] KeybindLeft Field Value Type Description System.String [] KeybindRight Declaration public static string[] KeybindRight Field Value Type Description System.String [] KeybindSoftDrop Declaration public static string[] KeybindSoftDrop Field Value Type Description System.String [] lastDir List for LastDir Bool, describes direction for auto-repeat Declaration public List<bool> lastDir Field Value Type Description System.Collections.Generic.List < System.Boolean > LockCounter Counter of how many rotations/moves happened when the lock conditions are met and TimeLock was running Declaration public static List<int> LockCounter Field Value Type Description System.Collections.Generic.List < System.Int32 > Remarks After reaching 15, block locks immediately after a rotation or a move lockDeepestRow Deepest row reached by currently active block Declaration public List<int> lockDeepestRow Field Value Type Description System.Collections.Generic.List < System.Int32 > Remarks The LockCounter resets if the block reaches a new deepest floor move Used for Tetris.Blocks.CanMove(System.Int32,System.String) Declaration public bool move Field Value Type Description System.Boolean otherMat Declaration public Material otherMat Field Value Type Description Material PlayerIds List of player ids, used to get player count Declaration public static List<int> PlayerIds Field Value Type Description System.Collections.Generic.List < System.Int32 > PreviewArea Coordinates for area where each player has it's next prepared block Declaration public static List<Vector3> PreviewArea Field Value Type Description System.Collections.Generic.List < Vector3 > x, y, z PreviewBlock List for PreviewBlock GameObject Stores block for Tetris.Blocks.Preview(System.Int32) Declaration public static List<GameObject> PreviewBlock Field Value Type Description System.Collections.Generic.List < GameObject > randomType Array of block types used in SpawnMino(Int32, String) Declaration public string[] randomType Field Value Type Description System.String [] rIndex Random integer for picking from randomType Declaration public int rIndex Field Value Type Description System.Int32 spawn Used for Tetris.Blocks.CanSpawn(System.Int32) Declaration public bool spawn Field Value Type Description System.Boolean SpawnArea Coordinates for area above the game space where all blocks remain when not in use Declaration public static Vector3 SpawnArea Field Value Type Description Vector3 x, y, z StartArea Coordinates for area where each player starts Declaration public static List<Vector3> StartArea Field Value Type Description System.Collections.Generic.List < Vector3 > x, y, z Tetrominos List of all blocks Declaration public static readonly List<Tetromino> Tetrominos Field Value Type Description System.Collections.Generic.List < Tetromino > Remarks Each player has one of each type, locked blocks don't exist in this list timeAutoRepeat Auto-repeat timers for Tetris.Blocks.Controls Declaration public List<float> timeAutoRepeat Field Value Type Description System.Collections.Generic.List < System.Single > timeBeginAutoRepeat List for timeBeginAutoRepeat float Declaration public List<float> timeBeginAutoRepeat Field Value Type Description System.Collections.Generic.List < System.Single > timeFall Timers for Tetris.Blocks.Falling Declaration public List<float> timeFall Field Value Type Description System.Collections.Generic.List < System.Single > TimeLock Lock timers for Tetris.Blocks.Controls and Tetris.Blocks.Falling Declaration public static List<float> TimeLock Field Value Type Description System.Collections.Generic.List < System.Single > timeSoftDrop Soft drop timers for Tetris.Blocks.Controls Declaration public List<float> timeSoftDrop Field Value Type Description System.Collections.Generic.List < System.Single > timeToAutoRepeat Time for a block to move to side when auto-repeat is active Declaration public float timeToAutoRepeat Field Value Type Description System.Single timeToBeginAutoRepeat Time for a block to begin auto-repeat after a direction key is held Declaration public float timeToBeginAutoRepeat Field Value Type Description System.Single TimeToFall Time for a block to fall one block down Declaration public static float TimeToFall Field Value Type Description System.Single timeToLock Time for a block to lock in place Declaration public float timeToLock Field Value Type Description System.Single TimeToSoftDrop Time for a block to fall when soft drop key is held down Declaration public static float TimeToSoftDrop Field Value Type Description System.Single Methods InitializePlayer(Int32) Initializes all variables needed for given player Declaration public void InitializePlayer(int playerId) Parameters Type Name Description System.Int32 playerId Player id OriginalColors(Int32) Declaration public static void OriginalColors(int playerId) Parameters Type Name Description System.Int32 playerId RemovePlayer(Int32) Removes all variables needed for given player Declaration public void RemovePlayer(int playerId) Parameters Type Name Description System.Int32 playerId Player id SpawnMino(Int32, String) Spawns a block Declaration protected void SpawnMino(int playerId, string type) Parameters Type Name Description System.Int32 playerId Player id System.String type Type of a block"
  },
  "api/Tetris.html": {
    "href": "api/Tetris.html",
    "title": "Namespace Tetris | Cooperative Tetris",
    "keywords": "Namespace Tetris Classes Blocks Manages all block and their movement Menu Rotation ScoreSystem Scoring system SubMenu Class used for each menu SubTileMap Tetromino TileMap"
  },
  "api/Tetris.Menu.html": {
    "href": "api/Tetris.Menu.html",
    "title": "Class Menu | Cooperative Tetris",
    "keywords": "Class Menu Inheritance System.Object Menu Namespace : Tetris Assembly : cs.temp.dll.dll Syntax public class Menu : MonoBehaviour Fields blockPrefab2 Declaration public GameObject blockPrefab2 Field Value Type Description GameObject materialGame Declaration public Material materialGame Field Value Type Description Material materialMenu Declaration public Material materialMenu Field Value Type Description Material Properties Menus Declaration public static SubMenu[] Menus { get; } Property Value Type Description SubMenu [] NeedToAddPlayer Declaration public static bool NeedToAddPlayer { get; set; } Property Value Type Description System.Boolean NeedToRemovePlayer Declaration public static bool NeedToRemovePlayer { get; set; } Property Value Type Description System.Boolean PlayerCount Declaration public int PlayerCount { get; set; } Property Value Type Description System.Int32"
  },
  "api/Tetris.Rotation.html": {
    "href": "api/Tetris.Rotation.html",
    "title": "Class Rotation | Cooperative Tetris",
    "keywords": "Class Rotation Inheritance System.Object Rotation Namespace : Tetris Assembly : cs.temp.dll.dll Syntax public class Rotation : MonoBehaviour Fields FutureRotationAc Declaration public static readonly List<int> FutureRotationAc Field Value Type Description System.Collections.Generic.List < System.Int32 > FutureRotationC Declaration public static readonly List<int> FutureRotationC Field Value Type Description System.Collections.Generic.List < System.Int32 > KeybindRotateAc Declaration public static readonly List<string> KeybindRotateAc Field Value Type Description System.Collections.Generic.List < System.String > KeybindRotateC Declaration public static readonly List<string> KeybindRotateC Field Value Type Description System.Collections.Generic.List < System.String > RotationOffsetX Declaration public static float RotationOffsetX Field Value Type Description System.Single RotationOffsetY Declaration public static float RotationOffsetY Field Value Type Description System.Single Properties RGridCache Declaration public static int[, ] RGridCache { get; set; } Property Value Type Description System.Int32 [,] Methods CanRotate(Int32, Int32, Int32, Int32, Int32) Declaration public static bool CanRotate(int playerId, int fromState, int intoState, int xOffset, int yOffset) Parameters Type Name Description System.Int32 playerId System.Int32 fromState System.Int32 intoState System.Int32 xOffset System.Int32 yOffset Returns Type Description System.Boolean Rotate(Int32, String, Int32, Int32) Declaration public static void Rotate(int playerId, string direction, int xMove, int yMove) Parameters Type Name Description System.Int32 playerId System.String direction System.Int32 xMove System.Int32 yMove RotateAttempt(Int32, Int32, Int32, Int32, Int32, String) Declaration public bool RotateAttempt(int playerId, int fromState, int intoState, int xOffset, int yOffset, string direction) Parameters Type Name Description System.Int32 playerId System.Int32 fromState System.Int32 intoState System.Int32 xOffset System.Int32 yOffset System.String direction Returns Type Description System.Boolean"
  },
  "api/Tetris.ScoreSystem.html": {
    "href": "api/Tetris.ScoreSystem.html",
    "title": "Class ScoreSystem | Cooperative Tetris",
    "keywords": "Class ScoreSystem Scoring system Inheritance System.Object ScoreSystem Namespace : Tetris Assembly : cs.temp.dll.dll Syntax public class ScoreSystem : MonoBehaviour Fields CurrentAction Declaration public static float CurrentAction Field Value Type Description System.Single CurrentLevel Declaration public static int CurrentLevel Field Value Type Description System.Int32 IsB2B Declaration public static bool IsB2B Field Value Type Description System.Boolean IsGameOverScoreSet Declaration public static bool IsGameOverScoreSet Field Value Type Description System.Boolean IsTSpinLastMove Declaration public static int IsTSpinLastMove Field Value Type Description System.Int32 LinesCleared Declaration public static float LinesCleared Field Value Type Description System.Single NewRecordText Declaration public static Text NewRecordText Field Value Type Description Text Score Declaration public static float Score Field Value Type Description System.Single Methods ScoreCounter() Calculates current level and sets the fall speed based on cleared lines Declaration public static void ScoreCounter() Remarks Called at SpawnMino(Int32, String)"
  },
  "api/Tetris.SubMenu.html": {
    "href": "api/Tetris.SubMenu.html",
    "title": "Class SubMenu | Cooperative Tetris",
    "keywords": "Class SubMenu Class used for each menu Inheritance System.Object SubMenu Namespace : Tetris Assembly : cs.temp.dll.dll Syntax public class SubMenu Properties Canvas Gets the Canvas's parent GameObject Declaration public GameObject Canvas { get; set; } Property Value Type Description GameObject CanvasCanvas Gets the Canvas Declaration public Canvas CanvasCanvas { get; set; } Property Value Type Description Canvas IsPaused Gets menu's pause state Declaration public bool IsPaused { get; set; } Property Value Type Description System.Boolean Menu Gets the GameObject of a menu item Declaration public GameObject[] Menu { get; set; } Property Value Type Description GameObject [] MenuItem Gets the Text of a menu item Declaration public Text[] MenuItem { get; set; } Property Value Type Description Text [] MenuItemCount Gets the number of MenuItem s in the submenu Declaration public int MenuItemCount { get; set; } Property Value Type Description System.Int32 MenuItemSelected Gets the Text of a currently selected MenuItem Declaration public Text MenuItemSelected { get; set; } Property Value Type Description Text SelectedIndex Gets index of a currently selected MenuItem Declaration public int SelectedIndex { get; set; } Property Value Type Description System.Int32"
  },
  "api/Tetris.SubTileMap.html": {
    "href": "api/Tetris.SubTileMap.html",
    "title": "Class SubTileMap | Cooperative Tetris",
    "keywords": "Class SubTileMap Inheritance System.Object SubTileMap Namespace : Tetris Assembly : cs.temp.dll.dll Syntax public class SubTileMap Properties CollisionMap Declaration public bool[, ] CollisionMap { get; set; } Property Value Type Description System.Boolean [,] Color Declaration public Color[, ] Color { get; set; } Property Value Type Description Color [,] GridCube Declaration public GameObject[, ] GridCube { get; set; } Property Value Type Description GameObject [,] IsActive Declaration public bool[, ] IsActive { get; set; } Property Value Type Description System.Boolean [,] IsClear Declaration public bool[, ] IsClear { get; set; } Property Value Type Description System.Boolean [,]"
  },
  "api/Tetris.Tetromino.html": {
    "href": "api/Tetris.Tetromino.html",
    "title": "Class Tetromino | Cooperative Tetris",
    "keywords": "Class Tetromino Inheritance System.Object Tetromino Namespace : Tetris Assembly : cs.temp.dll.dll Syntax public class Tetromino Fields Id Declaration public int Id Field Value Type Description System.Int32 Properties AtSpawn Declaration public bool AtSpawn { get; set; } Property Value Type Description System.Boolean Color Declaration public Color Color { get; set; } Property Value Type Description Color CubeGo Declaration public GameObject[, ] CubeGo { get; set; } Property Value Type Description GameObject [,] IsActive Declaration public bool IsActive { get; set; } Property Value Type Description System.Boolean IsHold Declaration public bool IsHold { get; set; } Property Value Type Description System.Boolean IsLocked Declaration public bool IsLocked { get; set; } Property Value Type Description System.Boolean Location Declaration public float[] Location { get; set; } Property Value Type Description System.Single [] RGrid Declaration public int[, ] RGrid { get; set; } Property Value Type Description System.Int32 [,] RotationState Declaration public int RotationState { get; set; } Property Value Type Description System.Int32 Size Declaration public int Size { get; set; } Property Value Type Description System.Int32 TetrominoGo Declaration public GameObject TetrominoGo { get; set; } Property Value Type Description GameObject Type Declaration public string Type { get; set; } Property Value Type Description System.String"
  },
  "api/Tetris.TileMap.html": {
    "href": "api/Tetris.TileMap.html",
    "title": "Class TileMap | Cooperative Tetris",
    "keywords": "Class TileMap Inheritance System.Object TileMap Namespace : Tetris Assembly : cs.temp.dll.dll Syntax public class TileMap : MonoBehaviour Fields blockPrefab Declaration public GameObject blockPrefab Field Value Type Description GameObject blockWithTexture Declaration public Material blockWithTexture Field Value Type Description Material GridHeight Declaration public static int GridHeight Field Value Type Description System.Int32 GridWidth Declaration public static int GridWidth Field Value Type Description System.Int32 IsClear Declaration public static List<int> IsClear Field Value Type Description System.Collections.Generic.List < System.Int32 > IsGameOver Declaration public static bool IsGameOver Field Value Type Description System.Boolean timeGameOver Declaration public float timeGameOver Field Value Type Description System.Single timeToGameOver Declaration public float timeToGameOver Field Value Type Description System.Single Properties GameOverCube Declaration public static GameObject[, ] GameOverCube { get; set; } Property Value Type Description GameObject [,] LineToAnimate Declaration public static GameObject[, ] LineToAnimate { get; set; } Property Value Type Description GameObject [,] MovementTileMap Declaration public static SubTileMap MovementTileMap { get; set; } Property Value Type Description SubTileMap PlayGrid Declaration public static int[, ] PlayGrid { get; set; } Property Value Type Description System.Int32 [,] Methods ClearCollisionMap() Declaration public static void ClearCollisionMap() GameOver(Boolean) Declaration public static void GameOver(bool isReal) Parameters Type Name Description System.Boolean isReal InitializeGrid() Declaration public void InitializeGrid()"
  },
  "index.html": {
    "href": "index.html",
    "title": "Cooperative Tetris | Cooperative Tetris",
    "keywords": "Cooperative Tetris Welcome to the website of the Cooperative Tetris maturita project! Table of contents User documentation Developer documentation Source code"
  },
  "manual/tetris.html": {
    "href": "manual/tetris.html",
    "title": "Uživatelská dokumentace | Cooperative Tetris",
    "keywords": "Uživatelská dokumentace O projektu Maturitní projekt Kooperativní Tetris vychází ze známé arkádové hry Tetris , která byla vytvořena již roku 1984 Alexeyem Pajitnovem . Jde o vlastní implementaci této klasické hry v oblíbeném herním enginu Unity . Nejdůležitějším originálním prvkem této implementace hry je kooperativní režim, ve kterém se hrácí pole rozšíří pro další hráče, kteří následně spolupracují a snaží se dosáhnout společného skóre. Pravidla Hráči mají za úkol vyčistit jedotlivé řádky tím, že je zaplní tetrominy (dále nazýváno pouze bloky ). Každý hráč může v jednom okamžiku ovládat pouze jeden blok. Gravitace se s roustoucí úrovní postupně zvyšuje, což zrychluje tempo hry. Skóre i obtížnost je pro všechny hráče společná. Hra je prohraná, když není kde vygenerovat další blok. Ovládání Pohyb: Pohyb doprava : Přesune blok o 1 kostku doprava + spustí automatické opakování, pokud je držen po dobu 0,3 s. Přesun doleva : Přesune blok o 1 kostku doleva + spustí automatické opakování, pokud je držen po dobu 0,3 s. Měkký pád : Přesune blok dolů 20krát rychleji, než je normální rychlost pádu. Tvrdý pád : Přesune blok na zem a okamžitě zablokuje aktivní blok. Rotace: Rotace po směru hodinových ručiček : Otočí blok o 90° ve směru hodinových ručiček Otočení proti směru hodinových ručiček : Otočí blok o 90° proti směru hodinových ručiček. Ostatní: Podržet : Přesune aktuálně aktivní blok do oblasti podržení a okamžitě vytvoří nový blok. Tip Po použití funkce podržení musí být blok uzamčen, aby se funkce znovu aktivovala. Rozložení ovládacích prvků Rozložení ovládacích prvků pro každého hráče závisí na počtu hráčů: Hra jednoho hráče Kooperace dvou hráčů Kooperace tří hráčů Bodování Následující tabulka vysvětluje bodování hry: Úkon Počet bodů Popis Single 100 x úroveň 1 vyčištěný řádek Double 300 x úroveň 2 naráz vyčistěné řádky Triple 500 x úroveň 3 naráz vyčištěné řádky Tetris 800 x úroveň 4 naráz vyčištěné řádky Mini T-Spin* 100 x úroveň Jedodušší forma T-Spinu, bez vyčíštěného řádku Mini T-Spin Single 200 x úroveň Jednodušší forma T-Spinu, 1 vyčištěný řádek T-Spin* 400 x úroveň T-Spin, bez vyčištěného řádku T-Spin Single 800 x úroveň T-Spin, 1 vyčištěný řádek T-Spin Double 1200 x úroveň T-Spin, 2 naráz vyčištěné řádky T-Spin Triple 1600 x úroveň T-Spin, 3 naráz vyčištěné řádky Měkký pád 1 x n Blok je pomocí měkkého pádu shozen o n řádků Tvrdý pád 2 x m Blok je pomocí tvrdého pádu shozen o m řádků Back-to-Back 0.5 x úkony Bonus za dva po sobě jdoucí složité úkony ** *Mechanika T-Spinu a Mini T-Spinu popsána podrobně zde , ** Složité úkony : Tetris, Mini T-Spin Single, T-Spin Single, T-Spin Double, T-Spin Triple"
  }
}